{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<section class="product section">
  <div class="page-width">
    <div class="product__container">
      <!-- Left column: Product images and gallery -->
      <div class="product__media-wrapper">
        <div class="product-images-slider" data-product-images>
          <div class="product-featured-image-container">
            <img
              src="{{ featured_image | img_url: 'master' }}"
              srcset="
                {%- if featured_image.width >= 375 -%}{{ featured_image | img_url: width: 375 }} 375w,{%- endif -%}
                {%- if featured_image.width >= 750 -%}{{ featured_image | img_url: width: 750 }} 750w,{%- endif -%}
                {%- if featured_image.width >= 1100 -%}{{ featured_image | img_url: width: 1100 }} 1100w,{%- endif -%}
                {%- if featured_image.width >= 1500 -%}{{ featured_image | img_url: width: 1500 }} 1500w,{%- endif -%}
                {{ featured_image | img_url: 'master' }} {{ featured_image.width }}w
              "
              sizes="(min-width: 1100px) 550px, (min-width: 990px) 47.5vw, 90vw"
              alt="{{ featured_image.alt | escape }}"
              loading="eager"
              width="{{ featured_image.width }}"
              height="{{ featured_image.height }}"
              class="product-featured-image"
              id="ProductImage-{{ featured_image.id }}"
              data-media-id="{{ featured_image.id }}"
            >
            <button class="expand-btn" data-image-expand>
              {% render 'icon-expand' %}
            </button>
          </div>

          {% if product.images.size > 1 %}
            <div class="product-gallery">
              {% for image in product.images %}
                <button
                  class="product-single__thumbnail{% if image.id == featured_image.id %} active{% endif %}"
                  data-src="{{ image | img_url: 'master' }}"
                  data-srcset="{{ image | img_url: width: 375 }} 375w, {{ image | img_url: width: 750 }} 750w, {{ image | img_url: width: 1100 }} 1100w, {{ image | img_url: width: 1500 }} 1500w, {{ image | img_url: 'master' }} {{ image.width }}w"
                  data-media-id="{{ image.id }}"
                >
                  <img
                    src="{{ image | img_url: '150x' }}"
                    alt="{{ image.alt | escape }}"
                    loading="lazy"
                    width="150"
                  >
                </button>
              {% endfor %}
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Right column: Product information -->
      <div class="product__info-wrapper{% if section.settings.enable_sticky_info %} product__info-wrapper--sticky{% endif %}">
        <div class="product__info">
          {% if section.settings.show_vendor and product.vendor != blank %}
            <p class="product__vendor">{{ product.vendor }}</p>
          {% endif %}

          <h1 class="product__title">{{ product.title }}</h1>

          <div class="product__price-container">
            {%- liquid
              assign compare_at_price = current_variant.compare_at_price
              assign price = current_variant.price
              assign available = current_variant.available
            -%}

            {% if compare_at_price > price %}
              <div class="product__price product__price--sale">
                <span class="product__price-item product__price-item--sale">{{ price | money }}</span>
                <span class="product__price-item product__price-item--compare">{{ compare_at_price | money }}</span>
                <span class="product__price-item product__price-item--discount">
                  {% assign discount_percentage = compare_at_price | minus: price | times: 100 | divided_by: compare_at_price %}
                  {{ discount_percentage }}% off
                </span>
              </div>
            {% else %}
              <div class="product__price">
                <span class="product__price-item">{{ price | money }}</span>
              </div>
            {% endif %}
          </div>

          {% if product.metafields.product.weight %}
            <div class="product__weight">
              <span>Weight:</span> {{ product.metafields.product.weight }}
            </div>
          {% endif %}

          <div class="product__description rte">
            {{ product.description }}
          </div>

          {% form 'product', product, id: 'ProductForm', class: 'product-form', data-product-form: '' %}
            <!-- Variant selector - handles options like size, color, etc. -->
            {%- unless product.has_only_default_variant -%}
              <div class="product__variants">
                {% for option in product.options_with_values %}
                  <div class="product__option">
                    <h3 class="product__option-label">{{ option.name }}:</h3>

                    <fieldset class="product__option-fieldset" name="{{ option.name | handleize }}">
                      <legend class="visually-hidden">{{ option.name }}</legend>

                      {%- for value in option.values -%}
                        {%- liquid
                          assign option_disabled = true
                          for variant in product.variants
                            if variant.available and variant.options contains value
                              assign option_disabled = false
                              break
                            endif
                          endfor
                        -%}

                        <input
                          type="radio"
                          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          name="{{ option.name }}"
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}checked{% endif %}
                          {% if option_disabled %}disabled{% endif %}
                          class="visually-hidden"
                          data-option-position="{{ option.position }}"
                        >
                        <label
                          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          class="product__option-value{% if option.selected_value == value %} selected{% endif %}{% if option_disabled %} disabled{% endif %}"
                        >
                          {{ value | escape }}
                        </label>
                      {%- endfor -%}
                    </fieldset>
                  </div>
                {% endfor %}
              </div>
            {%- endunless -%}

            <!-- Current variant ID input -->
            <input type="hidden" name="id" value="{{ current_variant.id }}">

            <!-- Quantity selector -->
            {% if section.settings.show_quantity_selector %}
              <div class="product__quantity">
                <label for="Quantity" class="product__quantity-label">Quantity:</label>
                <div class="quantity-selector js-qty">
                  <button type="button" class="quantity-btn js-qty__dec" aria-label="Decrease quantity">
                    {% render 'icon-minus' %}
                  </button>
                  <input
                    type="number"
                    id="Quantity"
                    name="quantity"
                    class="quantity-input js-qty__input"
                    value="1"
                    min="1"
                    aria-label="Quantity"
                    data-quantity-input
                  >
                  <button type="button" class="quantity-btn js-qty__inc" aria-label="Increase quantity">
                    {% render 'icon-plus' %}
                  </button>
                </div>
              </div>
            {% endif %}

            <!-- Error message display area -->
            <div class="product-form__error-message-wrapper" role="alert" hidden>
              <span class="product-form__error-message"></span>
            </div>

            <!-- Add to cart / Buy now buttons -->
            <div class="product-form__buttons">
              <button
                type="submit"
                name="add"
                class="product-form__submit btn btn--primary"
                {% unless current_variant.available %}disabled{% endunless %}
              >
                <span>
                  {%- if current_variant.available -%}
                    Add to cart
                  {%- else -%}
                    Sold out
                  {%- endif -%}
                </span>
                <div class="loading-overlay__spinner hidden">
                  <svg aria-hidden="true" focusable="false" role="presentation" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                    <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                  </svg>
                </div>
              </button>

              {% if section.settings.enable_dynamic_checkout %}
                {{ form | payment_button }}
              {% endif %}
            </div>
          {% endform %}

          <!-- SKU and product details area -->
          <div class="product__details">
            {% if section.settings.show_sku and current_variant.sku != blank %}
              <div class="product__sku">
                <span>SKU:</span> {{ current_variant.sku }}
              </div>
            {% endif %}

            <!-- Blocks for additional product information -->
            {% for block in section.blocks %}
              {% case block.type %}
                {% when 'ingredients' %}
                  {% if product.metafields.product.ingredients %}
                    <details class="product__collapsible-section">
                      <summary class="product__collapsible-heading">
                        <span>{{ block.settings.title | default: 'Ingredients' }}</span>
                        <span class="icon-plus">{% render 'icon-plus' %}</span>
                        <span class="icon-minus">{% render 'icon-minus' %}</span>
                      </summary>
                      <div class="product__collapsible-content rte">
                        {{ product.metafields.product.ingredients }}
                      </div>
                    </details>
                  {% endif %}

                {% when 'nutritional_info' %}
                  {% if product.metafields.product.nutritional_info %}
                    <details class="product__collapsible-section">
                      <summary class="product__collapsible-heading">
                        <span>{{ block.settings.title | default: 'Nutritional Information' }}</span>
                        <span class="icon-plus">{% render 'icon-plus' %}</span>
                        <span class="icon-minus">{% render 'icon-minus' %}</span>
                      </summary>
                      <div class="product__collapsible-content rte">
                        {{ product.metafields.product.nutritional_info }}
                      </div>
                    </details>
                  {% endif %}

                {% when 'how_to_use' %}
                  {% if product.metafields.product.how_to_use %}
                    <details class="product__collapsible-section">
                      <summary class="product__collapsible-heading">
                        <span>{{ block.settings.title | default: 'How to Use' }}</span>
                        <span class="icon-plus">{% render 'icon-plus' %}</span>
                        <span class="icon-minus">{% render 'icon-minus' %}</span>
                      </summary>
                      <div class="product__collapsible-content rte">
                        {{ product.metafields.product.how_to_use }}
                      </div>
                    </details>
                  {% endif %}

                {% when 'custom' %}
                  {% if block.settings.content != blank %}
                    <details class="product__collapsible-section">
                      <summary class="product__collapsible-heading">
                        <span>{{ block.settings.title }}</span>
                        <span class="icon-plus">{% render 'icon-plus' %}</span>
                        <span class="icon-minus">{% render 'icon-minus' %}</span>
                      </summary>
                      <div class="product__collapsible-content rte">
                        {{ block.settings.content }}
                      </div>
                    </details>
                  {% endif %}
              {% endcase %}
            {% endfor %}
          </div>

          <!-- Social sharing buttons -->
          {% if section.settings.show_share_buttons %}
            <div class="product__share">
              <h3 class="product__share-title">Share this product</h3>
              <div class="product__share-buttons">
                <a
                  href="https://www.facebook.com/sharer.php?u={{ shop.url }}{{ product.url }}"
                  target="_blank"
                  rel="noopener"
                  aria-label="Share on Facebook"
                  class="product__share-button"
                >
                  {% render 'icon-facebook' %}
                </a>
                <a
                  href="https://twitter.com/intent/tweet?text={{ product.title | url_encode }}&url={{ shop.url }}{{ product.url }}"
                  target="_blank"
                  rel="noopener"
                  aria-label="Share on Twitter"
                  class="product__share-button"
                >
                  {% render 'icon-twitter' %}
                </a>
                <a
                  href="mailto:?subject={{ product.title | url_encode }}&body={{ shop.url }}{{ product.url }}"
                  aria-label="Share via Email"
                  class="product__share-button"
                >
                  {% render 'icon-email' %}
                </a>
              </div>
            </div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</section>

{% comment %}
  The fullscreen image modal for product gallery
{% endcomment %}
<div id="ProductImageModal" class="image-modal" aria-hidden="true" role="dialog">
  <div class="image-modal__overlay" data-modal-close></div>
  <div class="image-modal__content">
    <button class="image-modal__close" aria-label="Close" data-modal-close>
      {% render 'icon-close' %}
    </button>

    <div class="image-modal__controls">
      <button class="image-modal__control image-modal__prev" aria-label="Previous image">
        {% render 'icon-chevron-left' %}
      </button>
      <button class="image-modal__control image-modal__next" aria-label="Next image">
        {% render 'icon-chevron-right' %}
      </button>
    </div>

    <div class="image-modal__image-container">
      <img
        src="{{ featured_image | img_url: 'master' }}"
        alt="{{ featured_image.alt | escape }}"
        class="image-modal__image"
      >
    </div>

    {% if product.images.size > 1 %}
      <div class="image-modal__thumbnails">
        {% for image in product.images %}
          <button
            class="image-modal__thumbnail{% if image.id == featured_image.id %} active{% endif %}"
            data-media-id="{{ image.id }}"
          >
            <img
              src="{{ image | img_url: '100x' }}"
              alt="{{ image.alt | escape }}"
              loading="lazy"
              width="100"
            >
          </button>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Product information",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_quantity_selector",
      "label": "Show quantity selector",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_sku",
      "label": "Show SKU",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_share_buttons",
      "label": "Show social sharing buttons",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "label": "Enable sticky info on large screens",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "Enable video looping",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_dynamic_checkout",
      "label": "Show dynamic checkout buttons",
      "info": "Using the payment methods available on your store, customers see their preferred option, like PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "ingredients",
      "name": "Ingredients",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Ingredients"
        }
      ]
    },
    {
      "type": "nutritional_info",
      "name": "Nutritional Information",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Nutritional Information"
        }
      ]
    },
    {
      "type": "how_to_use",
      "name": "How to Use",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "How to Use"
        }
      ]
    },
    {
      "type": "custom",
      "name": "Custom Text",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Custom information"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Custom text"
        }
      ]
    }
  ]
}
{% endschema %}

<style>
.product {
  padding: 2rem 0;
}

.product__container {
  display: grid;
  gap: 2rem;
}

/* Product Media */
.product__media-wrapper {
  position: relative;
}

.product-featured-image-container {
  position: relative;
  margin-bottom: 1rem;
  background: var(--color-background-light);
  border-radius: var(--radius-base);
  overflow: hidden;
  text-align: center;
}

.product-featured-image {
  display: block;
  max-width: 100%;
  max-height: 550px;
  margin: 0 auto;
  object-fit: contain;
  transition: transform 0.3s ease;
}

.expand-btn {
  position: absolute;
  bottom: 15px;
  right: 15px;
  background: rgba(255, 255, 255, 0.8);
  color: var(--color-primary);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.expand-btn:hover {
  background: white;
  transform: scale(1.1);
}

.product-gallery {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 0.75rem;
  margin-top: 1rem;
}

.product-single__thumbnail {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  border-radius: var(--radius-small);
  overflow: hidden;
  transition: all 0.2s ease;
  position: relative;
}

.product-single__thumbnail img {
  display: block;
  width: 100%;
  height: auto;
  object-fit: cover;
  aspect-ratio: 1;
}

.product-single__thumbnail:hover {
  transform: translateY(-2px);
}

.product-single__thumbnail.active {
  box-shadow: 0 0 0 2px var(--color-primary);
}

/* Product Info */
.product__info-wrapper {
  height: 100%;
}

.product__info-wrapper--sticky {
  position: sticky;
  top: 120px;
}

.product__vendor {
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
  color: var(--color-text-light);
}

.product__title {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: var(--color-headings);
}

.product__price-container {
  margin-bottom: 1.5rem;
}

.product__price {
  display: flex;
  align-items: baseline;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.product__price--sale {
  color: var(--color-primary);
}

.product__price-item {
  font-size: 1.5rem;
  font-weight: 700;
}

.product__price-item--compare {
  font-size: 1rem;
  text-decoration: line-through;
  color: var(--color-text-light);
  font-weight: normal;
}

.product__price-item--discount {
  font-size: 0.9rem;
  background: var(--color-primary);
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: var(--radius-full);
}

.product__weight {
  margin-bottom: 1rem;
  font-size: 0.9rem;
}

.product__weight span {
  font-weight: 600;
}

.product__description {
  margin-bottom: 1.5rem;
}

/* Variant Selector */
.product__variants {
  margin-bottom: 1.5rem;
}

.product__option {
  margin-bottom: 1.25rem;
}

.product__option-label {
  font-size: 1rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.product__option-fieldset {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  border: none;
  padding: 0;
  margin: 0;
}

.product__option-value {
  display: inline-block;
  min-width: 40px;
  padding: 0.5rem 1rem;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-full);
  text-align: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.product__option-value:hover:not(.disabled) {
  border-color: var(--color-primary);
}

.product__option-value.selected {
  background: var(--color-primary);
  border-color: var(--color-primary);
  color: white;
}

.product__option-value.disabled {
  opacity: 0.5;
  cursor: not-allowed;
  text-decoration: line-through;
}

/* Quantity Selector */
.product__quantity {
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  gap: 1rem;
}

.product__quantity-label {
  font-weight: 600;
}

.quantity-selector {
  display: flex;
  align-items: center;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-full);
}

.quantity-btn {
  width: 36px;
  height: 36px;
  background: transparent;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
}

.quantity-btn:hover {
  background: var(--color-background-light);
}

.quantity-input {
  width: 50px;
  height: 36px;
  border: none;
  text-align: center;
  font-size: 1rem;
  font-weight: 600;
  -moz-appearance: textfield;
}

.quantity-input::-webkit-outer-spin-button,
.quantity-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Form Error */
.product-form__error-message-wrapper {
  padding: 0.75rem;
  background: #FEF2F2;
  border-radius: var(--radius-small);
  margin-bottom: 1rem;
}

.product-form__error-message {
  color: #B91C1C;
  font-size: 0.9rem;
}

/* Form Buttons */
.product-form__buttons {
  display: grid;
  gap: 1rem;
  margin-bottom: 2rem;
}

.product-form__submit {
  position: relative;
  width: 100%;
  padding: 0.875rem 1.5rem;
  font-weight: 700;
  font-size: 1rem;
}

.product-form__submit[disabled] {
  opacity: 0.5;
  cursor: not-allowed;
}

.shopify-payment-button__button {
  border-radius: var(--radius-base) !important;
  padding: 0.875rem 1.5rem !important;
  font-family: var(--font-body) !important;
  font-weight: 700 !important;
}

.loading-overlay__spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 20px;
}

.spinner {
  animation: rotate 2s linear infinite;
  animation-play-state: paused;
}

.spinner .path {
  stroke: currentColor;
  stroke-linecap: round;
  animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}

/* Collapsible sections */
.product__details {
  border-top: 1px solid var(--color-border);
  padding-top: 1.5rem;
  margin-bottom: 2rem;
}

.product__collapsible-section {
  border-bottom: 1px solid var(--color-border);
}

.product__collapsible-heading {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 0;
  cursor: pointer;
  font-weight: 600;
}

.product__collapsible-heading::-webkit-details-marker {
  display: none;
}

.product__collapsible-content {
  padding-bottom: 1rem;
}

details[open] .icon-plus {
  display: none;
}

details:not([open]) .icon-minus {
  display: none;
}

/* Social Share */
.product__share {
  margin-top: 2rem;
}

.product__share-title {
  font-size: 1rem;
  margin-bottom: 0.75rem;
}

.product__share-buttons {
  display: flex;
  gap: 0.75rem;
}

.product__share-button {
  width: 40px;
  height: 40px;
  background: var(--color-background-light);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.product__share-button:hover {
  background: var(--color-primary);
  color: white;
  transform: translateY(-3px);
}

/* Image Modal */
.image-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease;
}

.image-modal.is-active {
  opacity: 1;
  visibility: visible;
}

.image-modal__overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.85);
}

.image-modal__content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 2;
  padding: 3rem 1rem;
}

.image-modal__close {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: transparent;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  z-index: 3;
  transition: all 0.2s ease;
}

.image-modal__close:hover {
  transform: scale(1.1);
  color: var(--color-primary);
}

.image-modal__controls {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1rem;
  pointer-events: none;
}

.image-modal__control {
  background: rgba(255, 255, 255, 0.2);
  color: white;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  pointer-events: auto;
  transition: all 0.2s ease;
}

.image-modal__control:hover {
  background: var(--color-primary);
}

.image-modal__image-container {
  height: 70vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

.image-modal__image {
  max-height: 100%;
  max-width: 100%;
  object-fit: contain;
}

.image-modal__thumbnails {
  display: flex;
  gap: 0.5rem;
  padding: 1rem 0;
  margin-top: 1rem;
  overflow-x: auto;
  max-width: 100%;
}

.image-modal__thumbnail {
  background: transparent;
  border: none;
  padding: 0;
  cursor: pointer;
  position: relative;
  transition: all 0.2s ease;
  opacity: 0.7;
}

.image-modal__thumbnail.active {
  opacity: 1;
  box-shadow: 0 0 0 2px white;
}

.image-modal__thumbnail img {
  width: 60px;
  height: 60px;
  object-fit: cover;
}

/* Responsive */
@media screen and (min-width: 768px) {
  .product__container {
    grid-template-columns: 1fr 1fr;
  }

  .product-form__buttons {
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and (max-width: 767px) {
  .product__title {
    font-size: 1.5rem;
  }

  .product-gallery {
    grid-template-columns: repeat(4, 1fr);
  }

  .product-featured-image {
    max-height: 350px;
  }

  .image-modal__control {
    width: 40px;
    height: 40px;
  }

  .image-modal__image-container {
    height: 60vh;
  }

  .image-modal__thumbnails {
    justify-content: center;
  }

  .image-modal__thumbnail img {
    width: 50px;
    height: 50px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Product variant selector
  const productForm = document.querySelector('[data-product-form]');

  if (productForm) {
    // Track when variant selection changes
    const optionSelectors = productForm.querySelectorAll('[data-option-position]');
    const variantIdInput = productForm.querySelector('input[name="id"]');

    // Helper to detect selected variant based on options
    function getSelectedVariantId() {
      // Get selected options
      const selectedOptions = [];
      optionSelectors.forEach(radio => {
        if (radio.checked) {
          selectedOptions[parseInt(radio.dataset.optionPosition) - 1] = radio.value;
        }
      });

      // Find matching variant in product json
      const productData = JSON.parse(document.getElementById('ProductJson-{{ product.id }}')?.textContent || '{{ product | json }}');

      // Return first variant where all options match selected options
      for (const variant of productData.variants) {
        if (variant.options.every((option, index) => option === selectedOptions[index])) {
          return variant.id;
        }
      }

      return null;
    }

    // Update form when variant selection changes
    optionSelectors.forEach(radio => {
      radio.addEventListener('change', () => {
        const variantId = getSelectedVariantId();
        if (variantId) {
          variantIdInput.value = variantId;
          // Trigger form change event for any other code that needs to respond
          variantIdInput.dispatchEvent(new Event('change', { bubbles: true }));
        }
      });
    });
  }

  // Product image gallery
  const productImages = document.querySelector('[data-product-images]');

  if (productImages) {
    const mainImage = productImages.querySelector('.product-featured-image');
    const thumbnails = productImages.querySelectorAll('.product-single__thumbnail');

    thumbnails.forEach(thumb => {
      thumb.addEventListener('click', () => {
        // Update main image src
        const newSrc = thumb.getAttribute('data-src');
        const newSrcset = thumb.getAttribute('data-srcset');
        const mediaId = thumb.getAttribute('data-media-id');

        // Update active state on thumbnails
        thumbnails.forEach(t => t.classList.remove('active'));
        thumb.classList.add('active');

        // Update main image
        if (newSrc) mainImage.setAttribute('src', newSrc);
        if (newSrcset) mainImage.setAttribute('srcset', newSrcset);
        if (mediaId) mainImage.setAttribute('data-media-id', mediaId);
      });
    });

    // Image modal functionality
    const modal = document.getElementById('ProductImageModal');
    const expandBtn = document.querySelector('[data-image-expand]');
    const closeBtn = modal.querySelector('[data-modal-close]');
    const prevBtn = modal.querySelector('.image-modal__prev');
    const nextBtn = modal.querySelector('.image-modal__next');
    const modalThumbnails = modal.querySelectorAll('.image-modal__thumbnail');
    const modalImage = modal.querySelector('.image-modal__image');

    // Open modal
    expandBtn.addEventListener('click', () => {
      // Get current main image details
      const currentSrc = mainImage.getAttribute('src');
      const currentMediaId = mainImage.getAttribute('data-media-id');

      // Set initial modal image
      modalImage.setAttribute('src', currentSrc);

      // Update active thumbnail in modal
      modalThumbnails.forEach(thumb => {
        const thumbMediaId = thumb.getAttribute('data-media-id');
        thumb.classList.toggle('active', thumbMediaId === currentMediaId);
      });

      // Show modal
      modal.classList.add('is-active');
      modal.setAttribute('aria-hidden', 'false');
      document.body.style.overflow = 'hidden';
    });

    // Close modal
    function closeModal() {
      modal.classList.remove('is-active');
      modal.setAttribute('aria-hidden', 'true');
      document.body.style.overflow = '';
    }

    closeBtn.addEventListener('click', closeModal);
    modal.querySelector('.image-modal__overlay').addEventListener('click', closeModal);

    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (!modal.classList.contains('is-active')) return;

      if (e.key === 'Escape') {
        closeModal();
      } else if (e.key === 'ArrowLeft') {
        navigateImages('prev');
      } else if (e.key === 'ArrowRight') {
        navigateImages('next');
      }
    });

    // Navigate between images
    function navigateImages(direction) {
      const currentThumb = modal.querySelector('.image-modal__thumbnail.active');
      if (!currentThumb) return;

      let nextThumb;

      if (direction === 'next') {
        nextThumb = currentThumb.nextElementSibling || modalThumbnails[0]; // Cycle to first if at end
      } else {
        nextThumb = currentThumb.previousElementSibling || modalThumbnails[modalThumbnails.length - 1]; // Cycle to last if at beginning
      }

      // Update image and active thumbnail
      modalImage.setAttribute('src', nextThumb.querySelector('img').getAttribute('src').replace('100x', 'master'));
      modalThumbnails.forEach(t => t.classList.remove('active'));
      nextThumb.classList.add('active');
    }

    // Navigation button handlers
    prevBtn.addEventListener('click', () => navigateImages('prev'));
    nextBtn.addEventListener('click', () => navigateImages('next'));

    // Modal thumbnail clicks
    modalThumbnails.forEach(thumb => {
      thumb.addEventListener('click', () => {
        const img = thumb.querySelector('img');
        const newSrc = img.getAttribute('src').replace('100x', 'master');

        modalImage.setAttribute('src', newSrc);
        modalThumbnails.forEach(t => t.classList.remove('active'));
        thumb.classList.add('active');
      });
    });
  }
});
</script>